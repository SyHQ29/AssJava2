/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FrmQLNV extends javax.swing.JFrame {

    NV x = null;

    ArrayList<NV> list = new ArrayList<>();
    private DefaultTableModel model = new DefaultTableModel();
    int runtime = 0;
    int trangthai = 3;
    boolean check = false;
    int thanh=0;

    /*ư
     * Creates new form FrmQLNV
     */
    public FrmQLNV() {
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setTitle("QUẢN LÝ NHÂN VIÊN");
        thoigian();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtma = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttuoi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtluong = new javax.swing.JTextField();
        gio = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnfind = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        btndau = new javax.swing.JButton();
        btnlui = new javax.swing.JButton();
        btntien = new javax.swing.JButton();
        btncuoi = new javax.swing.JButton();
        vitri = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblnhanvien = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý nhân viên");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("MÃ NHÂN VIÊN");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("HỌ VÀ TÊN");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("TUỔI");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("EMAIL");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("LƯƠNG");

        gio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gio.setForeground(new java.awt.Color(255, 0, 51));
        gio.setText("GIỜ");

        btnnew.setText("New");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnxoa.setText("Delete");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnfind.setText("Find");
        btnfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        btnthem.setText("Add");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnxoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnnew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnfind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnthem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnthem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnnew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnsave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnxoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnfind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnexit)
                .addContainerGap())
        );

        btndau.setText("|<");
        btndau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndauActionPerformed(evt);
            }
        });

        btnlui.setText("<<");
        btnlui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnluiActionPerformed(evt);
            }
        });

        btntien.setText(">>");
        btntien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntienActionPerformed(evt);
            }
        });

        btncuoi.setText(">|");
        btncuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncuoiActionPerformed(evt);
            }
        });

        vitri.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vitri.setForeground(new java.awt.Color(255, 51, 102));
        vitri.setText("record");

        tblnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblnhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblnhanvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblnhanvien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtma, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                .addComponent(txttuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtemail))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btndau)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnlui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btntien)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btncuoi)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vitri, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(gio)
                                .addGap(44, 44, 44)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btndau)
                            .addComponent(btnlui)
                            .addComponent(btntien)
                            .addComponent(btncuoi)
                            .addComponent(vitri)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        them();
        filtbale();
    }//GEN-LAST:event_btnthemActionPerformed

    private void tblnhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblnhanvienMouseClicked
        hienthi();
        vitri();
        thanh=tblnhanvien.getSelectedRow();
    }//GEN-LAST:event_tblnhanvienMouseClicked

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        moi();

    }//GEN-LAST:event_btnnewActionPerformed

    private void btntienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntienActionPerformed
        xuong();
        hienthi();
        vitri();
    }//GEN-LAST:event_btntienActionPerformed

    private void btnluiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnluiActionPerformed
        len();
        hienthi();
        vitri();
    }//GEN-LAST:event_btnluiActionPerformed

    private void btndauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndauActionPerformed
        dau();
        vitri();
    }//GEN-LAST:event_btndauActionPerformed

    private void btncuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncuoiActionPerformed
        cuoi();
        vitri();
    }//GEN-LAST:event_btncuoiActionPerformed

    private void btnfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindActionPerformed
        find();
        vitri();
    }//GEN-LAST:event_btnfindActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        xoa();
        int dong=0;
        vitri2(dong);
        hienthi();
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        save();
        filtbale();
        int dong=0;
        if (trangthai==2) {
            dong= list.size()-1;
            vitri2(dong);
        }else{
            dong=thanh;
            vitri2(dong);
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        openfile();
        filtbale();
        display(0);
        vitri();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        luufile();
    }//GEN-LAST:event_btnexitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQLNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmQLNV().setVisible(true);
            }
        });
    }

     public void filtbale() {
        model = (DefaultTableModel) tblnhanvien.getModel();
        model.setRowCount(0);
        for (NV x : list) {
            Object[] row = new Object[]{
                x.manv, x.name, x.tuoi, x.Email, x.luong
            };
            model.addRow(row);
        }
    }

    public void them() {
        x = new NV();
        try {
            x.manv = txtma.getText();
            if (checkTrung(txtma.getText()) == true) {
                JOptionPane.showMessageDialog(this, "Trùng mã hoặc mã bị để trống");
                return;
            }
            if (x.manv.length() == 0) {
                JOptionPane.showMessageDialog(this, "Không để trống mã");
                return;
            }
        } catch (Exception e) {
        }

        try {
            x.name = txtname.getText();
            if (x.name.length() == 0) {
                JOptionPane.showMessageDialog(this, "Không để trống tên");
                return;
            }
        } catch (Exception e) {
        }

        try {
            x.tuoi = Integer.parseInt(txttuoi.getText());
            if (x.tuoi >= 16 && x.tuoi <= 55) {
            } else {
                JOptionPane.showMessageDialog(this, "tuổi từ 16 đến 55");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "nhập đúng định dạng tuổi");
        }

        try {
            x.Email = txtemail.getText();
            String mail = "^[A-Za-z0-9_.]{6,32}@([a-zA-Z0-9]{2,12})(.[a-zA-Z]{2,12})+$";
            if (x.Email.matches(mail)) {

            } else {
                JOptionPane.showMessageDialog(this, "sai định dang email");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi Email");
        }

        try {
            x.luong = Double.parseDouble(txtluong.getText());
            if (x.luong > 5000000 ) {
            } else {
                JOptionPane.showMessageDialog(this, " Lương >5tr và không để trống");
                return;
            }
        } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "nhập đúng định dạng lương");
        }
        list.add(x);
        trangthai=0;
    }

    public void hienthi() {
         trangthai = 3;
        int hang = tblnhanvien.getSelectedRow();
        NV x = list.get(hang);
        genericdL<String> ma = new genericdL<>(x.manv);      
        txtma.setText(ma.duLieu);
        genericdL<String> name = new genericdL<>(x.name);  
        txtname.setText(name.duLieu);
        genericdL<Integer> tuoi = new genericdL<>(x.tuoi);  
        txttuoi.setText(Integer.toString(tuoi.duLieu));
        genericdL<String> Email = new genericdL<>(x.Email);  
        txtemail.setText(Email.duLieu);
        genericdL<Double> luong = new genericdL<>(x.luong);
        txtluong.setText(Double.toString(luong.duLieu));
    }

    public void display(int i) {
        NV x = list.get(i);
        txtma.setText(x.manv);
        txtname.setText(x.name);
        txttuoi.setText(Integer.toString(x.tuoi));
        txtemail.setText(x.Email);
        txtluong.setText(Double.toString(x.luong));

        tblnhanvien.getSelectionModel().setSelectionInterval(i, i);
    }

    public void moi() {
        trangthai = 2;
        txtemail.setText("");
        txtname.setText("");
        txtluong.setText("");
        txttuoi.setText("");
        txtma.setText("");

    }

    public void xuong() {
        try {
            model = (DefaultTableModel) tblnhanvien.getModel();
            int row = tblnhanvien.getSelectedRow();
            if (row < list.size() - 1) {
                tblnhanvien.getSelectionModel().setSelectionInterval(row + 1, row + 1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi");
        }
    }

    public void len() {
        try {
            model = (DefaultTableModel) tblnhanvien.getModel();
            int row = tblnhanvien.getSelectedRow();
            if (row > 0) {
                tblnhanvien.getSelectionModel().setSelectionInterval(row - 1, row - 1);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi");
        }
    }

    public void vitri() {
        try {
            model = (DefaultTableModel) tblnhanvien.getModel();
            int row = tblnhanvien.getSelectedRow();
            vitri.setText("Record: " + Integer.toString(row + 1) + " / " + list.size());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi vị trí");
        }
    }
        public void vitri2(int dong) {
        try {
            vitri.setText("Record: " + Integer.toString(dong + 1) + " / " + list.size());
          tblnhanvien.getSelectionModel().setSelectionInterval(dong , dong );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi vị trí");
        }
    }

    public void dau() {
        int row = 0;
        tblnhanvien.getSelectionModel().setSelectionInterval(row, row);
    }

    public void cuoi() {
//        model = (DefaultTableModel) tblnhanvien.getModel();
        int row = list.size() - 1;
        tblnhanvien.getSelectionModel().setSelectionInterval(row, row);
    }

    public void find() {
        int checkfind = -1;
        String findma = JOptionPane.showInputDialog("Nhập mã");
        int i;
        for (i = 0; i <= list.size() - 1; i++) {
            if (list.get(i).manv.equals(findma) == true) {
                checkfind = i;
                tblnhanvien.getSelectionModel().setSelectionInterval(i, i);

            }
        }
        if (findma.length() == 0) {
            JOptionPane.showMessageDialog(this, "không để trống");
        } else if (checkfind == -1) {
            JOptionPane.showMessageDialog(this, "Không có mã");

        } else {
            NV x = list.get(checkfind);
            txtma.setText(x.manv);
            txtname.setText(x.name);
            txttuoi.setText(Integer.toString(x.tuoi));
            txtemail.setText(x.Email);
            txtluong.setText(Double.toString(x.luong));
        }
    }

    public boolean checkTrung(String CheckmaString) {
        boolean trave = false;
        for (int i = 0; i <= list.size() - 1; i++) {
            if (list.get(i).manv.equals(CheckmaString) == true) {
                trave = true;
            }
        }
        return trave;
    }

    public void xoa() {
        int check = -1;
        int i;
        String findma = JOptionPane.showInputDialog("Nhập mã");
        for (i = 0; i <= list.size() - 1; i++) {
            if (list.get(i).manv.equals(findma) == true) {
                check = i;
            }
        }
        if (check >= 0) {
            list.remove(check);
            filtbale();
            JOptionPane.showMessageDialog(this, "xóa thành công");
        } else if (findma.length() == 0) {
            JOptionPane.showMessageDialog(this, "không để trống");
        } else {
            JOptionPane.showMessageDialog(this, "masv không tồn tại");
        }
    }

    public void save() {
        if (trangthai == 2) {
            them();
             int dong = list.size()-1;
             vitri2(dong);
             
        

        } else if (trangthai == 3) {
            int indext = tblnhanvien.getSelectedRow();
            NV xx = list.get(indext);

            if (checkTrung(txtma.getText()) == true) {
                JOptionPane.showMessageDialog(this, "Trùng mã hoặc mã bị để trống");
                return;
            }
            xx.manv = txtma.getText();
            if (xx.manv.length() == 0) {
                JOptionPane.showMessageDialog(this, "Không để trống mã");
                return;
            }
            xx.name = txtname.getText();
            if (xx.name.length() == 0) {
                JOptionPane.showMessageDialog(this, "Không để trống tên");
                return;
            }
            xx.tuoi = Integer.parseInt(txttuoi.getText());
            if (xx.tuoi >= 16 && xx.tuoi <= 55) {
            } else {
                JOptionPane.showMessageDialog(this, "tuổi từ 16 đến 55");
                return;
            }
            xx.Email = txtemail.getText();
            String mail = "^[A-Za-z0-9_.]{6,32}@([a-zA-Z0-9]{2,12})(.[a-zA-Z]{2,12})+$";
            if (xx.Email.matches(mail)) {

            } else {
                JOptionPane.showMessageDialog(this, "sai định dang email");
                return;
            }
            xx.luong = Double.parseDouble(txtluong.getText());
            if (xx.luong > 5000000) {
            } else {
                JOptionPane.showMessageDialog(this, " Lương >5tr");
                return;
            }
            vitri();
            trangthai = 0;
        } 
    }

    public void openfile() {
        try {
            FileInputStream fis = new FileInputStream("list.dat");
            ObjectInputStream ois = new ObjectInputStream(fis);
            list = (ArrayList<NV>) ois.readObject();
            ois.close();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "lỗi mở file");

        }
    }

    public void luufile() {
        try {
            int hoi = JOptionPane.showConfirmDialog(this,"bạn muốn thoát không","Exit",JOptionPane.YES_NO_OPTION);
            if (hoi == JOptionPane.YES_OPTION) {
                FileOutputStream fos = new FileOutputStream("list.dat");
                ObjectOutputStream oss = new ObjectOutputStream(fos);
                oss.writeObject(list);
                oss.close();
                JOptionPane.showMessageDialog(this, "lưu thành công");
                System.exit(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi lưu file");
        }
        
    }

    public void thoigian() {
        new Thread() {
            public void run() {
                while (runtime == 0) {
                    Calendar cal = new GregorianCalendar();

                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR_OF_DAY);
                    int AM_PM = cal.get(Calendar.AM_PM);
                    String day_night = "";
                    if (AM_PM == 1) {
                        day_night = "PM";
                    } else {
                        day_night = "AM";
                    }
                    if (hour > 12) {
                        hour = hour - 12;
                    }
                    String str = hour + ":" + minute + " " + day_night;
                    gio.setText(str);
                }
            }
        }.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btncuoi;
    private javax.swing.JButton btndau;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnfind;
    private javax.swing.JButton btnlui;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btntien;
    private javax.swing.JButton btnxoa;
    private javax.swing.JLabel gio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblnhanvien;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtluong;
    private javax.swing.JTextField txtma;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txttuoi;
    private javax.swing.JLabel vitri;
    // End of variables declaration//GEN-END:variables

}
